{"version":3,"sources":["backgrounds/bg1.jpg","backgrounds/bg2.jpg","backgrounds/bg3.jpg","Clock.jsx","DateComponent.jsx","Options.jsx","Arrows.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","date","Date","timer","this","window","setInterval","setState","clearInterval","className","toLocaleTimeString","Component","DateComponent","days","getDay","months","getMonth","getDate","getFullYear","Options","hideClock","bind","hideDate","e","target","value","type","id","onChange","checked","isClockHidden","htmlFor","isDateHidden","Arrows","handlePrevious","handleNext","href","onClick","bgs","bg1","bg2","bg3","App","Cookies","get","showOptions","options","getJSON","showClock","showDate","backgroundIndex","Math","floor","random","length","manageOptions","previousBg","nextBg","prevState","set","JSON","stringify","expires","style","backgroundImage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.16cbb26d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg1.b5f2f108.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg2.13f744bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg3.27047321.jpg\";","import React, { Component } from 'react';\n\nexport class Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date()\n        }\n        this.timer = null\n    }\n    \n    componentDidMount() {\n        this.timer = window.setInterval(() => {\n            this.setState({\n                date: new Date()\n            });\n        })\n    }\n\n    componentWillUnmount() {\n        window.clearInterval(this.timer)\n    }\n    \n    render() {\n        return (\n            <div className=\"Clock\">\n                {this.state.date.toLocaleTimeString(\"fr\")}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport class DateComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.date = new Date()\n    }\n    \n\n    getDay() {\n        return this.props.days[this.date.getDay() - 1]\n    }\n\n    getMonth() {\n        return this.props.months[this.date.getMonth()]\n    }\n    \n\n    render() {\n        return (\n            <div className=\"Date\">\n                {this.getDay() + ' '}\n                {this.date.getDate() + ' '}\n                {this.getMonth() + ' '}\n                {this.date.getFullYear()}\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nclass Options extends Component {\n    constructor(props) {\n        super(props);\n        this.hideClock = this.hideClock.bind(this)\n        this.hideDate = this.hideDate.bind(this)\n    }\n\n    hideClock(e) {\n        this.props.hideClock(e.target.value)\n    }\n\n    hideDate(e) {\n        this.props.hideDate(e.target.value)\n    }\n    \n\n    render() {\n        return (\n            <div className=\"Options container FadeInQuick\">\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"hideClock\" onChange={this.hideClock} checked={this.props.isClockHidden} ></input>\n                    <label className=\"form-check-label\" htmlFor=\"hideClock\">\n                        Masquer l'horloge\n                    </label>\n                </div>\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"hideDate\" onChange={this.hideDate} checked={this.props.isDateHidden} ></input>\n                    <label className=\"form-check-label\" htmlFor=\"hideDate\">\n                        Masquer la date\n                    </label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Options;","import React, { Component } from 'react';\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\n\nclass Arrows extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePrevious = this.handlePrevious.bind(this)\n        this.handleNext = this.handleNext.bind(this)\n    }\n    \n    handlePrevious() {\n        this.props.handlePrevious()\n    }\n\n    handleNext() {\n        this.props.handleNext()\n    }\n\n    render() {\n        return (\n            <div className=\"Arrows\">\n                <a className=\"Arrow\" href=\"#\" onClick={this.handlePrevious}><FaArrowLeft/></a>\n                <a className=\"Arrow\" href=\"#\" onClick={this.handleNext}><FaArrowRight/></a>\n            </div>\n        );\n    }\n}\n\nexport default Arrows;","import React, { Component } from 'react';\nimport { Clock } from './Clock'\nimport { DateComponent } from './DateComponent';\nimport Options from './Options';\nimport Arrows from './Arrows';\nimport Cookies from 'js-cookie'\nimport bg1 from './backgrounds/bg1.jpg'\nimport bg2 from './backgrounds/bg2.jpg'\nimport bg3 from './backgrounds/bg3.jpg'\n\n\nconst days = [\"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\", \"Dimanche\"]\nconst months = [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"]\n\nconst bgs = [bg1, bg2, bg3]\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    if(!Cookies.get('options')) {\n      this.state = {\n        showOptions: false,\n        options: {\n          showClock: true,\n          showDate: true,\n          backgroundIndex: Math.floor(Math.random() * bgs.length),\n        }\n      }\n    } else {\n      this.state = {\n        showOptions: false,\n        options: Cookies.getJSON('options'),\n      }\n    }\n    \n    this.manageOptions = this.manageOptions.bind(this)\n    this.hideClock = this.hideClock.bind(this)\n    this.hideDate = this.hideDate.bind(this)\n    this.previousBg = this.previousBg.bind(this)\n    this.nextBg = this.nextBg.bind(this)\n\n  }\n\n  manageOptions() {\n    this.setState({\n      showOptions: !this.state.showOptions,\n    });\n  }\n\n  hideClock() {\n    this.setState((prevState) => ({\n      options: {\n        ...prevState.options,\n        showClock: !this.state.options.showClock,\n      }\n    }))\n  }\n\n  hideDate() {\n    this.setState((prevState) => ({\n      options: {\n        ...prevState.options,\n        showDate: !this.state.options.showDate,\n      }\n    }))\n  }\n\n  previousBg() {\n    this.setState((prevState) => ({\n      options: {\n        ...prevState.options,\n        backgroundIndex: this.state.options.backgroundIndex - 1,\n      }\n    }))\n  }\n\n  nextBg() {\n    this.setState((prevState) => ({\n      options: {\n        ...prevState.options,\n        backgroundIndex: this.state.options.backgroundIndex + 1,\n      }\n    }))\n  }\n\n  render() {\n    Cookies.set('options', JSON.stringify(this.state.options), {expires: 9999})\n\n    const { backgroundIndex, showClock, showDate } = this.state.options\n\n    return (\n      <div className=\"App\" style={{ backgroundImage: 'url(' + bgs[backgroundIndex % bgs.length] + ')' }}>\n\n        <button className=\"btn btn-outline-light OptionsButton FadeIn SecondToFadeIn\" onClick={this.manageOptions}>Options</button>\n        {this.state.showOptions ? <Options hideClock={this.hideClock} hideDate={this.hideDate} isClockHidden={!showClock} isDateHidden={!showDate} /> : ''}\n\n\n        <div className=\"Center\">\n          {showClock || showDate ? \n            <div className=\"ClockAndDate FadeIn FirstToFadeIn\">\n            {showClock ? <Clock /> : ''}\n            {showDate ? <DateComponent days={days} months={months} /> : ''}\n          </div> : ''}\n\n        </div >\n        <div className=\"FadeIn SecondToFadeIn\">\n          <Arrows handleNext={this.nextBg} handlePrevious={this.previousBg} />\n        </div>\n\n      </div>\n    );\n  };\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}